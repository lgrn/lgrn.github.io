<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apple on agren.cc</title>
    <link>https://agren.cc/tags/apple/</link>
    <description>Recent content in Apple on agren.cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 13 Sep 2023 19:08:00 +0200</lastBuildDate><atom:link href="https://agren.cc/tags/apple/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using curl to pass videos to VLC on Apple TV</title>
      <link>https://agren.cc/p/curl-to-vlc/</link>
      <pubDate>Wed, 13 Sep 2023 19:08:00 +0200</pubDate>
      
      <guid>https://agren.cc/p/curl-to-vlc/</guid>
      <description>&lt;p&gt;VLC has always been a great piece of software, but one place where is
really shines is on iOS/tvOS since it allows you to play pretty much any
video file, and you can send that file over curl.&lt;/p&gt;</description>
      <content>&lt;p&gt;VLC has always been a great piece of software, but one place where is
really shines is on iOS/tvOS since it allows you to play pretty much any
video file, and you can send that file over curl.&lt;/p&gt;
&lt;p&gt;While this probably also works for iOS, this example will focus on the
use case of downloading a YouTube video, stripping it of sponsored
content and passing it on to VLC on an Apple TV. It&amp;rsquo;s not that
difficult, but you do need &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;&lt;code&gt;yt-dlp&lt;/code&gt;&lt;/a&gt;,
&lt;code&gt;ffmpeg&lt;/code&gt; and &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;bash&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;tovlc.sh&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-bash&#34; &gt;&lt;code&gt;#!/bin/bash /usr/bin/yt-dlp $1 -o
output.mkv \
--sponsorblock-remove all \
--force-overwrites \
--merge-output-format mkv \
--embed-subs \
&amp;amp;&amp;amp; /usr/bin/curl -i \
-X POST &amp;#39;&amp;lt;http://appletv.local/upload.json&amp;gt;&amp;#39; \
--form file=&amp;#39;@output.mkv&amp;#39; &lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;This will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;yt-dlp&lt;/code&gt; to download the video at the url passed as the argument
to the script (&lt;code&gt;$1&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove any sponsored content&lt;/li&gt;
&lt;li&gt;Overwrite the output.mkv file if it already exists&lt;/li&gt;
&lt;li&gt;Change the container to &lt;code&gt;mkv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Embed any subtitles found&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send a &lt;code&gt;POST&lt;/code&gt; request to VLC using
&lt;a href=&#34;https://curl.se/docs/manpage.html#-F&#34;&gt;&lt;code&gt;--form&lt;/code&gt;&lt;/a&gt; to send the binary
contents of the file as &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Having this script executable as &lt;code&gt;tovlc&lt;/code&gt; in &lt;code&gt;/usr/bin&lt;/code&gt; for example
will allow you to then run things like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tovlc &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://www.youtube.com/watch?v=foeov6Ahi4Y&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: I tried having &lt;code&gt;yt-dlp&lt;/code&gt; passing the output to stdout with &lt;code&gt;-o -&lt;/code&gt;
followed by a pipe to curl with &lt;code&gt;--form file=&#39;@-&#39;&lt;/code&gt;, while this should
work in theory I couldn&amp;rsquo;t get it to work, so the above will require
enough disk space to store the file before sending it to VLC.&lt;/p&gt;
&lt;h2 id=&#34;additional-reading&#34;&gt;Additional reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp#usage-and-options&#34;&gt;yt-dlp usage and
options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>

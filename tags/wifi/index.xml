<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wifi on agren.cc</title><link>https://agren.cc/tags/wifi/</link><description>Recent content in wifi on agren.cc</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Dec 2022 14:00:00 +0200</lastBuildDate><atom:link href="https://agren.cc/tags/wifi/index.xml" rel="self" type="application/rss+xml"/><item><title>Using any device on Wi-Fi with captive portals</title><link>https://agren.cc/p/any-device-captive-wifi/</link><pubDate>Sun, 25 Dec 2022 14:00:00 +0200</pubDate><guid>https://agren.cc/p/any-device-captive-wifi/</guid><description>Maybe you&amp;rsquo;re at a hotel, an airport, a conference, or somewhere else where whoever set up the Wi-Fi thought it was a good idea to use so-called captive portals.</description><content>&lt;p>Maybe you&amp;rsquo;re at a hotel, an airport, a conference, or somewhere else where whoever set up the Wi-Fi thought it was a good idea to use so-called &lt;a href="https://en.wikipedia.org/wiki/Captive_portal">captive portals&lt;/a>.&lt;/p>
&lt;p>Regardless of their purpose, whether it&amp;rsquo;s to limit connection for a specific time, or force end-users to accept some kind of agreement, they usually work the same way: they force you through some kind of web UI, and in the end it will validate your device based on the MAC address only.&lt;/p>
&lt;p>A MAC address can be changed, which means that if you have a device that cannot access the portal, you can still get that device onto the network by doing the following:&lt;/p>
&lt;ul>
&lt;li>Find out the MAC address of the device&lt;/li>
&lt;li>Change your laptop&amp;rsquo;s MAC to match the device&lt;/li>
&lt;li>Go through the validation process&lt;/li>
&lt;li>Change your laptop&amp;rsquo;s MAC back to something else&lt;/li>
&lt;/ul>
&lt;p>In short, by masquerading your laptop as the other device, you can ensure that MAC address gets whitelisted, giving your other device access.&lt;/p>
&lt;h2 id="step-1-figure-out-the-mac-address">Step 1: Figure out the MAC address&lt;/h2>
&lt;p>You may be able to figure out the MAC of the device from a physical sticker, or if it has a settings menu you can probably see it under network settings. In this case, it&amp;rsquo;s a Samsung TV where the built-in browser can&amp;rsquo;t handle the web portal. Let&amp;rsquo;s call it &lt;code>84:C0:EF:00:00:00&lt;/code>.&lt;/p>
&lt;h2 id="step-2-change-your-laptops-mac">Step 2: Change your laptop&amp;rsquo;s MAC&lt;/h2>
&lt;p>In Linux, this can be done with &lt;code>macchanger&lt;/code>, likely available from your package manager. Remember to disable your wifi device first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sudo macchanger --mac=84:C0:EF:00:00:00 wlp0s20f3
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-3-authenticate">Step 3: Authenticate&lt;/h2>
&lt;p>With your new MAC address, authenticate to the wifi just like you otherwise would, or if you&amp;rsquo;re cool, figure out the curl commands to do it. &amp;ldquo;Network&amp;rdquo; under the developer console (F12) in Firefox is helpful for this, and can export &lt;code>POST&lt;/code> requests as curl which is convenient. It might look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">curl &amp;#34;$URL&amp;#34; -X POST -H &amp;#39;Accept: */*&amp;#39; -H &amp;#39;Accept-Language: en-US,en;q=0.5&amp;#39; \
-H &amp;#39;Accept-Encoding: gzip, deflate, br&amp;#39; \
-H &amp;#39;Referer: https://www.example.com/en/online-booking/Customer/EmailLogin?context=default&amp;#39; \
-H &amp;#39;Content-Type: application/json&amp;#39; -H &amp;#39;Origin: https://www.example.com&amp;#39; \
--cookie-jar &amp;#39;/tmp/cookiejar&amp;#39; \
--data-raw &amp;#39;{&amp;#34;Email&amp;#34;:&amp;#34;foo@foo.foo&amp;#34;,&amp;#34;Password&amp;#34;:&amp;#34;f00b4r&amp;#34;,&amp;#34;PersistentLogin&amp;#34;:true,&amp;#34;IsModal&amp;#34;:false}&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If there&amp;rsquo;s multiple steps required, like also accepting terms of usage after a login, the &lt;code>--cookie-jar&lt;/code> flag is crucial here to allow the use of &lt;code>--cookie&lt;/code> in your next command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">curl &amp;#34;https://www.example.com/wifi/?terms=accepted&amp;#34; --cookie &amp;#39;/tmp/cookiejar&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This allows you to accept the terms with whatever cookies that were given to you when logging in.&lt;/p>
&lt;p>If the responses are JSON, you can just pipe them to &lt;code>jq&lt;/code> to easily see if all went OK.&lt;/p>
&lt;h2 id="step-4-reset-your-mac-again">Step 4: Reset your MAC again&lt;/h2>
&lt;p>If you got access working with the modified address in Step 3, you can now switch MAC again on your laptop. In this case, we&amp;rsquo;ll just pick a random one. Shut down your wireless device again, and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sudo macchanger -a wlp0s20f3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now re-authenticate your laptop, and when testing the other device, it should be allowed through.&lt;/p>
&lt;p>If not, you may need to disable the connection on that device and re-connect to the network. At this point, there shouldn&amp;rsquo;t be a portal in the way.&lt;/p></content></item></channel></rss>